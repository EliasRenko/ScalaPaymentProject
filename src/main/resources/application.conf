akka {

    loggers = [akka.event.slf4j.Slf4jLogger]

    loglevel = DEBUG

    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    actor {

        debug {

            unhandled = on
            lifecycle = on
        }
    }
}

akka.kafka.producer {

  parallelism = 100

  close-timeout = 60s

  use-dispatcher = "akka.kafka.default-dispatcher"

  eos-commit-interval = 100ms
}

akka.kafka.consumer {

  poll-interval = 50ms

  poll-timeout = 50ms

  stop-timeout = 30s

  close-timeout = 20s

  commit-timeout = 15s

  commit-time-warning = 1s

  wakeup-timeout = 3s

  max-wakeups = 10

  commit-refresh-interval = infinite

  kafka-clients {

    enable.auto.commit = false
  }

  wait-close-partition = 500ms
}

scalaPaymentProject {

    kafkaHost = "localhost"

    kafkaPort = "9092"

    transactionsGroup = "consumer_group_1"

    transactionsTopic = "transactions_json"

    balance = 1000

    sourceDirectory = "src/main/paymentData/"

    mask = """(\w+)\s+->\s+(\w+)\:\s+(\d+)"""
}